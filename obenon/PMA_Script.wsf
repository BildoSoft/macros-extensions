<job id="main">

    <script language="VBScript">
    Dim pegaseApp, pegaseAppWasNotRunning
    Call ConnectToServer("PegasePro.Application.1", pegaseApp, pegaseAppWasNotRunning)
    
    Dim oberonApp, oberonServerWasNotRunning
    Call ConnectToServer("Oberon.Document", oberonApp, oberonServerWasNotRunning)
    
    'Set WshShell = WScript.CreateObject("WScript.Shell")
   
    If Not pegaseApp Is Nothing Then
    If Not oberonApp Is Nothing Then

        oberonApp.Clear true, true
        oberonApp.ShowGridHeader False, True
        
        Set form_fields = CreateObject("Oberon.Collection")
        form_fields.Add "UserField01", "Numéro Ovocyte"
        form_fields.Add "UserField02", "Jour"
        form_fields.Add "UserField03", "Numéro de Lot"
        form_fields.Add "UserField04", "Patient"
        oberonApp.SetFormFields form_fields

        'WshShell.Popup "Insert selection from Pegase Pro", 3, "Command:", 0
        
        Set pegaseSelections = pegaseApp.ActiveDocuments
        Set gridCell = CreateObject("Oberon.GridCell")
        CompteurImage = 0
        JourOvoMax = 1
        CompteurImageMax = pegaseSelections.Count
        BaseJourOvo = 1
        For JourOvo = 1 To 30
            BaseJourOvo = JourOvoMax
            For Each pegaseDocument In pegaseSelections
                JourOvoRow = pegaseDocument.Form.Field("UserField02")
                If JourOvoRow = CStr(JourOvo) Then
                    TestJour = 1
                    NumLot = pegaseDocument.Form.Field("UserField03")
                    NumOvoCol = pegaseDocument.Form.Field("UserField01")
                    CheminOvo = pegaseDocument.FullName
                    If JourOvoMax < BaseJourOvo + CInt(NumLot) Then
                        JourOvoMax = BaseJourOvo + CInt(NumLot)
                    End If
                    gridCell.RowNo = BaseJourOvo + NumLot - 1
                    gridCell.ColNo = NumOvoCol - 1
                    gridCell.Value = pegaseDocument.FullName
                    oberonApp.AddGridItem gridCell
                    gridCell.Value = CStr(NumOvoCol)
                    oberonApp.SetGridHeader gridCell
                    
                    CompteurImage = CompteurImage + 1
                    If CompteurImage = CompteurImageMax Then Exit For
                End If
            Next
            If CompteurImage = CompteurImageMax Then Exit For
            If TestJour > 0 Then
                JourOvoMax = JourOvoMax + 1
            End If
            TestJour = 0
        Next

'        NomPersonne = pegaseApp.ActiveSection.Name
 '       oberonApp.SetCaption "2 I SYSTEM  - PMA  - Patient :  " & NomPersonne

        'WshShell.Popup "Done.", 3, "Command:", 0
    End If
    End If

	Sub ConnectToServer(progId, server, serverWasNotRunning)
		' Test pour déterminer si une copie du Server est déjà en exécution.
		On Error Resume Next    ' Retarde la récupération d'erreur.
		' La fonction Getobject appelée sans le premier argument renvoie une référence à une occurrence de
		' l'application. Si l'application n'est pas en exécution, une erreur se produit. Notez la virgule
		' utilisée en tant que premier espace réservé d'argument.
		Set server = GetObject(, progId)
		If Err.Number <> 0 Then serverWasNotRunning = True
		Err.Clear   ' Efface l'objet Err si une erreur s'est produite.
		If serverWasNotRunning = True Then Set server = CreateObject(progId)
	End Sub
    </script>

</job>