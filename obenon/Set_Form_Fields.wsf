<job id="main">
	<script language="VBScript">
    
    Dim oberonApp, oberonServerWasNotRunning
    Call ConnectToServer("Oberon.Document", oberonApp, oberonServerWasNotRunning)
    
    If Not oberonApp Is Nothing Then

        Set form_fields = CreateObject("Oberon.Collection")
        form_fields.add "objectID", "Identifiant"
        form_fields.add "Title", "Titre"
        form_fields.add "biWidth", "Largeur"
        form_fields.add "biHeight", "Hauteur"
        form_fields.add "biBitCount", "Type de pixel (bits)"
        form_fields.add "biSize", "Taille"
        form_fields.add "CompressSize", "Taille compressée"
        form_fields.add "CalibrateTitle", "Calibrage"
        form_fields.add "CalibrateTime", "Date de calibrage"
        form_fields.add "UserField01", "Mon champ 1"
        form_fields.add "UserField02", "Mon champ 2"
        form_fields.add "UserField03", "Mon champ 3"
        form_fields.add "UserField04", "Mon champ 4"
        oberonApp.SetFormFields form_fields
        
        Set WshShell = WScript.CreateObject("WScript.Shell")
        WshShell.Popup "Set form fields done !", 3, "Message:", 0
       
   End If

	Sub ConnectToServer(progId, server, serverWasNotRunning)
		' Test pour déterminer si une copie du Server est déjà en exécution.
		On Error Resume Next    ' Retarde la récupération d'erreur.
		' La fonction Getobject appelée sans le premier argument renvoie une référence à une occurrence de
		' l'application. Si l'application n'est pas en exécution, une erreur se produit. Notez la virgule
		' utilisée en tant que premier espace réservé d'argument.
		Set server = GetObject(, progId)
		If Err.Number <> 0 Then serverWasNotRunning = True
		Err.Clear   ' Efface l'objet Err si une erreur s'est produite.
		If serverWasNotRunning = True Then Set server = CreateObject(progId)
	End Sub
	</script>
</job>